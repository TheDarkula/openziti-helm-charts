# Default values for ziti-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# required controller endpoint
controller:
  endpoint: ""

advertise:
  # common adviertise-host for transport and edge - can also be specified individually
  # via `edge.host` and `transport.host`
  host: edge1.k3s.mira.qrk.us


# Certificate signing request basic data
csr:
  # country: US
  # province: NC
  # locality: Charlotte
  # organization: NetFoundry
  # organizationalUnit: Ziti
  sans: {}
  # # you could specify additional SANS here - configurations from advertise hosts and
  # # service's will be collected automatically
  #   dns:
  #     - my.additional.host
  #   ip:
  #     - "192.168.10.0"


transport:  # https://docs.openziti.io/docs/reference/configuration/router/#transport
  enabled: true
  port: 10080
  service:
    enabled: true
    type: LoadBalancer
    labels: {}
    annotations: {}

# is the edge enabled?
edge:
  enabled: true
  port: 1290
  # host: <host/ip> this edge can be resolved from clients
  service:
    # -- Service that is created to access the edge
    enabled: true
    type: LoadBalancer
    labels: {}
    annotations: {}
tunnel:
  mode: host # host | tproxy | proxy | none
  resolver: none  # udp://192.168.10.11:53
  # lanIf: eth0   # interface device name for tproxy?
  # services: []  # list of service-name:tcp-port pairs if mode "proxy"

# read-only mountpoint for executables (must be in image's executable search PATH)
execMountDir:     /usr/local/bin
# read-only mountpoint for identity secret
identityMountDir: /etc/ziti/identity
# writeable mountpoint where read-only config file is projected to allow router
# to write ./endpoints statefile in same dir
configMountDir:   /etc/ziti/config
configFilename:   ziti-router.yaml

image:
  repository: openziti/ziti-router
  pullPolicy: Always
  pullSecrets: []
  # command: ["sh", "-c", "while true; do sleep 86400; done"]
  command: ["ziti", "router", "run"]
  # The templates inside this list are evalated by the tpl funtion in the
  # deployment template because Helm values can not be directly referenced
  # inside the Values.yaml file (because it's just a data structure, not a
  # template).
  args: [ "{{ .Values.configMountDir }}/{{ .Values.configFilename }}", "--verbose"]

dnsPolicy: ClusterFirstWithHostNet

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  # capabilities:
  #   add:
  #     - NET_ADMIN

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ports: []

nodeSelector: {}
#  kubernetes.io/role: master

tolerations: []
  # - key: node-role.kubernetes.io/master
  #   operator: Exists
  #   effect: NoSchedule

affinity: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  annotations: {}

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: ""

  ## minio data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  ## Storage class of PV to bind. By default it looks for standard storage class.
  ## If the PV uses a different storage class, specify that here.
  storageClass: ""
  VolumeName: ""
  accessMode: ReadWriteOnce
  size: 50Mi