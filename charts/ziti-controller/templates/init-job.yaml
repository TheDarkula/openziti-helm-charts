apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 2
  completions: 1
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- include "ziti-controller.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        env:
          - name: ZITI_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name:  {{ include "ziti-controller.fullname" . }}-admin-secret
                key: admin-user
          - name: ZITI_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  {{ include "ziti-controller.fullname" . }}-admin-secret
                key: admin-password
          - name: PFXLOG_NO_JSON
            value: "true"
        volumeMounts:
          - mountPath: /persistent
            name: data
          - mountPath: {{ .Values.image.configPath }}
            name: ziti-controller-config
            subPath: ziti-controller.yaml
          - mountPath: /usr/local/bin/ctrl-init.sh
            name: ziti-controller-init
            subPath: ctrl-init.sh
          - mountPath: /etc/ziti/certs/default-identity/
            name: cert-default-identity
            readOnly: true
          - mountPath: /etc/ziti/certs/default-intermediate/
            name: cert-default-intermediate
            readOnly: true
        command: ["/usr/local/bin/ctrl-init.sh"]
        # command: ["ziti", "controller", "edge", "init", "{{ .Values.image.configPath }}", "-u", "$(ZITI_ADMIN_USER)", "-p", "$(ZITI_ADMIN_PASSWORD)"]
      volumes:
        - name: ziti-controller-config
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-config
            defaultMode: 0444
        - name: ziti-controller-init
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-init
            defaultMode: 0555
        - name: cert-default-identity
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-default-server-secret
        - name: cert-default-intermediate
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-default-intermediate-secret
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ziti-controller.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}